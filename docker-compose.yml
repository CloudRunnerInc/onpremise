# NOTE: This docker-compose.yml is meant to be just an example of how
# you could accomplish this on your own. It is not intended to work in
# all use-cases and must be adapted to fit your needs. This is merely
# a guideline.

# See docs.getsentry.com/on-premise/server/ for full
# instructions

version: '3.4'

x-defaults: &defaults
  restart: unless-stopped
  build: .
  depends_on:
    - redis
    - postgres
    - memcached
  environment:
    # Run `docker-compose run web config generate-secret-key`
    # to get the SENTRY_SECRET_KEY value.
    SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
    SENTRY_USE_SSL: 1
    SENTRY_MEMCACHED_HOST: memcached
    SENTRY_REDIS_HOST: redis
    SENTRY_POSTGRES_HOST: postgres
    SENTRY_EMAIL_HOST: smtp.mandrillapp.com
    SENTRY_EMAIL_USER: CloudRunner LLC
    SENTRY_EMAIL_PASSWORD: ${MANDRILL_API_KEY}
    SENTRY_EMAIL_PORT: 587
    BITBUCKET_CONSUMER_KEY: ${BITBUCKET_CONSUMER_KEY}
    BITBUCKET_CONSUMER_SECRET: ${BITBUCKET_CONSUMER_SECRET}
  volumes:
    - sentry-data:/var/lib/sentry/files

services:

  memcached:
    restart: unless-stopped
    image: memcached:1.4

  redis:
    restart: unless-stopped
    image: redis:3.2-alpine

  postgres:
    restart: unless-stopped
    image: postgres:9.5
    volumes:
      - sentry-postgres:/var/lib/postgresql/data

  web:
    restart: unless-stopped
    build: .
    depends_on:
      - redis
      - postgres
      - memcached
    environment:
      # Run `docker-compose run web config generate-secret-key`
      # to get the SENTRY_SECRET_KEY value.
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
      SENTRY_MEMCACHED_HOST: memcached
      SENTRY_REDIS_HOST: redis
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_EMAIL_HOST: smtp.mandrillapp.com
      SENTRY_EMAIL_USER: CloudRunner LLC
      SENTRY_EMAIL_PASSWORD: ${MANDRILL_API_KEY}
      SENTRY_EMAIL_PORT: 587
      SENTRY_USE_SSL: 1
      BITBUCKET_CONSUMER_KEY: ${BITBUCKET_CONSUMER_KEY}
      BITBUCKET_CONSUMER_SECRET: ${BITBUCKET_CONSUMER_SECRET}
      VIRTUAL_HOST: sentry.cloudrunner.com
      LETSENCRYPT_HOST: sentry.cloudrunner.com
      LETSENCRYPT_EMAIL: dev@cloudrunner.com
    volumes:
      - sentry-data:/var/lib/sentry/files
    expose:
      - '9000'

  cron:
    <<: *defaults
    command: run cron

  worker:
    <<: *defaults
    command: run worker

  nginx:
    image: jwilder/nginx-proxy
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    volumes:
      - ./certs:/etc/nginx/certs:ro
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - web

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - ./certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
    depends_on:
      - nginx


volumes:
    sentry-data:
    sentry-postgres:
    nginx-vhost:
    nginx-html:
